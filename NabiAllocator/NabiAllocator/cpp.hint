// https://learn.microsoft.com/en-us/cpp/build/reference/hint-files?view=msvc-170

// Config.h
#define NA_BENCHMARKS
#define NA_BENCHMARK_RUN_COUNT 1
#define NA_DEBUG
#define NA_MEMORY_TAGGING
#define NA_TESTS
#define NA_TRACK_ALLOCATIONS

// DebugUtils.h
#define NA_ASSERT(condition, message) NA_ASSERT_BASE(condition, message)
#define NA_ASSERT_DEFAULT(condition) NA_ASSERT_BASE(condition, NA_STR(condition))
#define NA_ASSERT_FAIL(message) NA_ASSERT(false, message)
#define NA_FUNCTION_NOT_IMPLEMENTED NA_ASSERT_FAIL("The function " << __FUNCTION__ << " is not implemented!")
#define NA_LOG(prep, severity, category, message, end) NA_LOG_BASE(prep, severity, category, message, end)
#define NA_LOG_CATEGORY_ASSERT "[Assert] "
#define NA_LOG_CATEGORY_CORE "[Core] "
#define NA_LOG_CATEGORY_MEMORY "[Memory] "
#define NA_LOG_CATEGORY_TEST "[Test] "
#define NA_LOG_ERROR "ERROR"
#define NA_LOG_END std::endl
#define NA_LOG_END_NL nabi_allocator::character_constants::c_NewLine
#define NA_LOG_INFO "INFO"
#define NA_LOG_WARN "WARN"

// MacroUtils.h
#define NA_CONCAT(arg1, arg2) arg1 ## arg2
#define NA_EXPAND(arg) arg
#define NA_MACRO_NOT_DEFINED (void(0))
#define NA_STR(arg) #arg
#define NA_XSTR(arg) NA_STR(arg)

// MemoryOperations.h
#define NA_TO_UPTR(arg) reinterpret_cast<nabi_allocator::uPtr>(arg)
#define NABI_ALLOCATPR_TO_VPTR(arg) reinterpret_cast<void*>(arg)

// TestConstants.h
#define NA_BENCHMARK_FIXTURE_NAME(benchmarkFixtureName) NA_CONCAT(NA_EXPAND(NA_BENCHMARK_IDENTIFIER), benchmarkFixtureName)
#define NA_BENCHMARK_IDENTIFIER b_
#define NA_TEST_FIXTURE_NAME(testFixtureName) NA_CONCAT(NA_EXPAND(NA_TEST_IDENTIFIER), testFixtureName)
#define NA_TEST_IDENTIFIER t_

// StringUtils.h
#define NA_MAKE_STRING_FROM_STREAM(stringAssignment, content) std::ostringstream stringStream = {}; stringStream << content; stringAssignment = stringStream.str();

// TypeUtils.h
#define NA_NAMEOF(arg) ((decltype(&arg))nullptr, #arg)
#define NA_SET_COPY_CONSTRUCTORS(type, operation) type(type&) = operation; type(type const&) = operation;
#define NA_SET_COPY_MOVE_CONSTRUCTORS(type, operation) NA_SET_COPY_CONSTRUCTORS(type, operation) NA_SET_MOVE_CONSTRUCTORS(type, operation)
#define NA_SET_MOVE_CONSTRUCTORS(type, operation) type(type&&) = operation; type(type const&&) = operation;

// Version.h
#define NA_VERSION
#define NA_VERSION_MAJOR 0
#define NA_VERSION_MINOR 0 
#define NA_VERSION_PATCH 0
